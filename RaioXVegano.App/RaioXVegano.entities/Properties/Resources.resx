<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="campoObrigatorio" xml:space="preserve">
    <value>Campo de preenchimento obrigatório.</value>
  </data>
  <data name="emailAssuntoLogErro" xml:space="preserve">
    <value>Erro no App - Log</value>
  </data>
  <data name="emailEnviadoComSucesso" xml:space="preserve">
    <value>Tudo pronto para você enviar seu e-mail. Siga no seu aplicativo de e-mail para nos enviar os dados e logo você terá noticias nossas. Obrigada! &lt;3</value>
  </data>
  <data name="emailMensagemLogErro" xml:space="preserve">
    <value>Olá. &lt;br/&gt;&lt;br/&gt; Recebi um erro no app e gostaria de ajuda. &lt;br/&gt; Meu código usuário é: {0}  (Não apagar o código de usuário) &lt;br/&gt;&lt;br/&gt; Att,</value>
  </data>
  <data name="emailRaioXVegano" xml:space="preserve">
    <value>raioxvegano@gmail.com</value>
  </data>
  <data name="erroAtualizarProduto" xml:space="preserve">
    <value>Ahhh não! Tivemos um problema com a atualização do produto. Tenta mais uma vez e caso o erro continue me manda um e-mail no endereço {0} dizendo o que aconteceu clicando no botão ao lado.</value>
  </data>
  <data name="erroCadastrarProduto" xml:space="preserve">
    <value>Ahhh não! Tivemos um problema com o cadastro do produto. Tenta mais uma vez e caso o erro continue me manda um e-mail no endereço {0} dizendo o que aconteceu clicando no botão ao lado.</value>
  </data>
  <data name="erroConsultaProduto" xml:space="preserve">
    <value>Ahhh não! Tivemos um problema com a consulta do produto. Tenta mais uma vez e caso o erro continue me manda um e-mail no endereço {0} dizendo o que aconteceu clicando no botão ao lado.</value>
  </data>
  <data name="erroGenerico" xml:space="preserve">
    <value>Ahhh não! Tivemos um problema. Tenta mais uma vez e caso o erro continue me manda um e-mail no endereço {0} dizendo o que aconteceu clicando no botão ao lado.</value>
  </data>
  <data name="erroSalvarLog" xml:space="preserve">
    <value>Ahhh não! Tivemos um problema com o envio do e-mail. Me manda um e-mail no endereço {0} dizendo o que aconteceu direto do seu aplicativo de e-mail.</value>
  </data>
  <data name="mensagemErroContadorAtualizacao" xml:space="preserve">
    <value>Poxa! Ainda não terminaram de atualizar o produto. Poderia voltar e começar novamente?</value>
  </data>
  <data name="mensagemProdutoSendoEditado" xml:space="preserve">
    <value>Tem alguém editando o mesmo produto. Espera um pouquinho que vamos atualizar a página para você.</value>
  </data>
  <data name="produtoAlteradoSucesso" xml:space="preserve">
    <value>O produto foi alterado!</value>
  </data>
  <data name="produtoCadastradoSucesso" xml:space="preserve">
    <value>O produto foi cadastrado!</value>
  </data>
  <data name="produtoNaoEncontrado" xml:space="preserve">
    <value>Não encontramos o produto. Vamos cadastrar?</value>
  </data>
  <data name="produtoNaoVegano" xml:space="preserve">
    <value>{0} não é vegano!</value>
  </data>
  <data name="produtoVegano" xml:space="preserve">
    <value>{0} é vegano!</value>
  </data>
</root>