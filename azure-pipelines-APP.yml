# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
  branches:
    include:
      - master

  paths:
    exclude:
      - RaioXVegano.Api/*

pool:
  vmImage: 'windows-latest'
  demands:
  - MSBuild
  - Xamarin.Android
  - JDK

variables:
  slnUtil: '**/RaioXVegano.Util.sln'
  slnApp: '**/RaioXVegano.App.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Debug'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  displayName: Util sln Restore
  inputs:
    restoreSolution: '$(slnUtil)'

- task: VSBuild@1
  displayName: Util sln Build
  inputs:
    solution: '$(slnUtil)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: NuGetCommand@2
  displayName: App sln Restore
  inputs:
    restoreSolution: '$(slnApp)'

- task: XamarinAndroid@1
  displayName: App sln Build
  inputs:
    projectFile: '**/RaioXVegano.App.Android.csproj'
    jdkOption: 'JDKVersion'
    configuration: '$(buildConfiguration)'

- task: VSBuild@1
  displayName: Testes csproj Build
  inputs:
    solution: '$(slnApp)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'    

- task: CmdLine@2
  displayName: Generate Test Report
  inputs:
    script: |
      echo ********** starting code coverage report

      "$(System.DefaultWorkingDirectory)\RaioXVegano.App\packages\OpenCover.4.7.922\tools\OpenCover.Console.exe" -target:"$(System.DefaultWorkingDirectory)\RaioXVegano.App\packages\NUnit.ConsoleRunner.3.12.0\tools\nunit3-console.exe" -targetargs:"$(System.DefaultWorkingDirectory)\RaioXVegano.App\RaioXVegano.testes\bin\Debug\RaioXVegano.testes.dll" -filter:"+[*]*  -[RaioXVegano.Util]* -[RaioXVegano.App]* -[RaioXVegano.entities]* -[RaioXVegano.ibo]* -[RaioXVegano.so]* -[RaioXVegano.iso]* -[RaioXVegano.di]* -[nunit.framework]* -[Xamarin.Essentials]*" -register -output:"OpenCover.xml"

      echo ********** code coverage report completed

      echo ********** converting to cobertura 

      "$(System.DefaultWorkingDirectory)\RaioXVegano.App\packages\OpenCoverToCoberturaConverter.0.3.4\tools\OpenCoverToCoberturaConverter.exe" -input:OpenCover.xml -output:Cobertura.xml -sources:$(System.DefaultWorkingDirectory)
      
      echo ********** report converted
    workingDirectory: '$(System.DefaultWorkingDirectory)'

- task: PublishTestResults@2
  displayName: Publish Test Result
  inputs:
    testResultsFormat: 'NUnit'
    testResultsFiles: '**/TestResult.xml'
    failTaskOnFailedTests: true

- task: PublishCodeCoverageResults@1
  displayName: Publish Coverage Result
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)\Cobertura.xml'
    pathToSources: '$(System.DefaultWorkingDirectory)'

